public abstract class TreeNode {

    private int data;
    protected TreeNode parent;
    protected TreeNode rightChild;
    protected TreeNode leftChild;
    private int nodeDepth;
    protected int nodeHeight;

    /**
     * A default constructor for the TreeNode class
     */
    public TreeNode(){

    }

    public int getData(){
        return data;
    }

    public int getNodeDepth(){
        return nodeDepth;
    }

    public int getNodeHeight(){
        return nodeHeight;
    }

    public boolean hasParent(){
        return parent != null;
    }

    public boolean hasRightChild(){
        return rightChild != null;
    }

    public boolean hasLeftChild(){
        return leftChild != null;
    }

    public TreeNode getParent() {
        return parent;
    }

    public TreeNode getRightChild(){
        return rightChild;
    }

    public TreeNode getLeftChild(){
        return leftChild;
    }

    public void setData(int newData){
        data = newData;
    }

    public void setRightChild(TreeNode newRightChild){
        rightChild = newRightChild;
    }

    public void setLeftChild(TreeNode newLeftChild){
        leftChild = newLeftChild;
    }

    public void setParent(AvlNode newParent){
        parent = newParent;
    }
}
