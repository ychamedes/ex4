package oop.ex4.data_structures;

public abstract class TreeNode {

    protected static final int LEFT_SUBHEIGHT = 0;
    protected static final int RIGHT_SUBHEIGHT = 1;

    private int data;
    protected TreeNode parent;
    protected TreeNode rightChild;
    protected TreeNode leftChild;
    protected int nodeDepth;

    /**
     * A default constructor for the TreeNode class
     */
    public TreeNode(){

    }

    public int getData(){
        return data;
    }

    public TreeNode getParent() {
        return parent;
    }

    public TreeNode getRightChild(){
        return rightChild;
    }

    public TreeNode getLeftChild(){
        return leftChild;
    }

    public void setData(int newData){
        data = newData;
    }

    public int getNodeHeight(){
        int[] subHeights = findSubHeights();
        return Math.max(subHeights[LEFT_SUBHEIGHT], subHeights[RIGHT_SUBHEIGHT]);
    }

    protected int[] findSubHeights(){
        int[] subHeightArr = new int[2];
        if(leftChild != null){
            subHeightArr[LEFT_SUBHEIGHT] = leftChild.getNodeHeight() + 1;
        }
        if(rightChild != null) {
            subHeightArr[RIGHT_SUBHEIGHT] = rightChild.getNodeHeight() + 1;
        }
        return subHeightArr;
    }

}
